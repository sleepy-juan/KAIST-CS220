; Principles of Programming
; 20170504 이주안

#lang racket

; HW 05 Problem 01 - a

(define saved '*first-call*)

(define (prev val)
  (let ((return saved))
    (set! saved val)
    return))




; product: function, number, function, number -> number
; to compute the product of a given function(term) of a number which is in the range of [a,b]
; where the number increases with the way of a given function(next)
; (product (lambda (x) x) 1 (lambda (x) (+ x 1)) 5) should produce 120
(define (product term a next b)
  (if (> a b)
      1
      (* (term a) (product term (next a) next b))))
; (test (product (lambda (x) x) 1 (lambda (x) (+ x 1)) 2) 2)
; (test (product (lambda (x) x) 1 (lambda (x) (+ x 1)) 3) 6)
; (test (product (lambda (x) x) 1 (lambda (x) (+ x 1)) 4) 24)
